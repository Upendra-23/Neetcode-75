class Twitter {
    unordered_map<int,unordered_set<int>> followerMap;
    vector<pair<int,int>> posts;
public:
    Twitter() {
        
    }
    
    void postTweet(int userId, int tweetId) {
        posts.push_back({userId,tweetId});
    }
    
    vector<int> getNewsFeed(int userId) {
        vector<int> ans;
        unordered_set<int> s = followerMap[userId];
        int cnt = 10;

        for(int i=posts.size()-1;i >=0; i--){
            if(cnt == 0) break;
            int followerId = posts[i].first;
            int tweetId = posts[i].second;
            if(s.find(followerId) != s.end() || followerId == userId){
                ans.push_back(tweetId);
                cnt--;
            }
        }
        return ans;
    }
    
    void follow(int followerId, int followeeId) {
        followerMap[followerId].insert(followeeId);
    }
    
    void unfollow(int followerId, int followeeId) {
        followerMap[followerId].erase(followeeId);
    }
};

/**
 * Your Twitter object will be instantiated and called as such:
 * Twitter* obj = new Twitter();
 * obj->postTweet(userId,tweetId);
 * vector<int> param_2 = obj->getNewsFeed(userId);
 * obj->follow(followerId,followeeId);
 * obj->unfollow(followerId,followeeId);
 */

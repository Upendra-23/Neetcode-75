class Solution {
    bool isvalid(int row,int col,int n,int m){
        return row >= 0 && row < n && col >= 0 && col < m;
    }
    void dfs(int row,int col,vector<vector<int>> &vis,vector<vector<char>> &board){
        vis[row][col] = true;
        int dr[] = {-1,0,0,1};
        int dc[] = {0,-1,1,0};
        for(int i=0;i<4;i++){
            int nrow = row + dr[i];
            int ncol = col + dc[i];
            if(isvalid(nrow,ncol,board.size(),board[0].size()) && !vis[nrow][ncol] && board[nrow][ncol] == 'O')
                dfs(nrow,ncol,vis,board);
        }
    }
public:
    void solve(vector<vector<char>>& board) {
        int n = board.size();
        int m = board[0].size();

        vector<vector<int>> vis(n,vector<int> (m,0));
        for(int j=0;j<m;j++){
            if(board[0][j] == 'O' && !vis[0][j])
                dfs(0,j,vis,board);
            if(board[n-1][j] == 'O' && !vis[n-1][j])
                dfs(n-1,j,vis,board);
        }
        for(int i=0;i<n;i++){
            if(board[i][0] == 'O' && !vis[i][0])
                dfs(i,0,vis,board);
            if(board[i][m-1] == 'O' && !vis[i][m-1])
                dfs(i,m-1,vis,board);
        }
        for(int i=1;i<n-1;i++){
            for(int j=1;j<m-1;j++){
                if(!vis[i][j])
                    board[i][j] = 'X';
            }
        }
    }
};

class Solution {
    bool fun(vector<int> &piles,int mid,int h){
        long long sum = 0;
        for(auto it:piles){
            sum += (it/mid);
            if(it%mid != 0)
                sum++;
        }
        return sum <= h;
    }
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        int ans = -1;
        int low = 1, high = *max_element(piles.begin(),piles.end());
        while(low <= high){
            int mid = low+(high-low)/2;
            if(fun(piles,mid,h)){
                ans = mid;
                high = mid-1;
            }
            else low = mid+1;
        }
        return ans;
    }
};

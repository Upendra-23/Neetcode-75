#include <bits/stdc++.h> 
bool isvalid(int row,int col,int n,int m){
    return row >= 0 && row < n && col >= 0 && col < m;
}
vector<vector<int>> wallsAndGates(vector<vector<int>> &grid, int n, int m) {
    queue<pair<int,int>> q;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(grid[i][j] == 0)
                q.push({i,j});
        }
    }

    int dr[] = {-1,0,0,1};
    int dc[] = {0,-1,1,0};

    int dis = 0;
    while(!q.empty()){
        int size = q.size();
        dis++;
        while(size--){
            int row = q.front().first;
            int col = q.front().second;
            q.pop();

            for(int i=0;i<4;i++){
                int nrow = row + dr[i];
                int ncol = col + dc[i];
                if(isvalid(nrow,ncol,n,m) && grid[nrow][ncol] == INT_MAX){
                    grid[nrow][ncol] = dis;
                    q.push({nrow,ncol});
                }
            }
        }
    }
    return grid;
}

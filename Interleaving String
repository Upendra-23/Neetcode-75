class Solution {
    int fun(int i,int j,string &s1,string &s2,string &s3,vector<vector<int>> &dp){
        if(i == 0 && j == 0) return true;
        if(dp[i][j] != -1) return dp[i][j];
        bool op1 = false, op2 = false;
        if(i-1 >= 0 && s1[i-1] == s3[i+j-1]) op1 = fun(i-1,j,s1,s2,s3,dp);
        if(j-1 >= 0 && s2[j-1] == s3[i+j-1]) op2 = fun(i,j-1,s1,s2,s3,dp);
        return dp[i][j] = op1 || op2;
    }
public:
    bool isInterleave(string s1, string s2, string s3) {
        int n = s1.size();
        int m = s2.size();
        if(n + m != s3.size()) return false;
        vector<vector<int>> dp(n+1,vector<int> (m+1,-1));
        return fun(n,m,s1,s2,s3,dp);
    }
};

class Solution {
    bool fun(int i,int j,string &s,string &p,vector<vector<int>> &dp){
        if(i < 0 && j < 0) return true;
        if(i < 0 && j >= 0) return false;
        if(j < 0 && i >= 0){
            if(p[i] == '*') return fun(i-2,j,s,p,dp);
            return false;
        }
        if(dp[i][j] != -1) return dp[i][j];
        if(p[i] == s[j] || p[i] == '.') return dp[i][j] = fun(i-1,j-1,s,p,dp);
        else if(p[i] == '*')
            return dp[i][j] = fun(i-2,j,s,p,dp) || (s[j] == p[i-1] || p[i-1] == '.') && fun(i,j-1,s,p,dp);
        return dp[i][j] = false;
    }
public:
    bool isMatch(string s, string p) {
        int n = p.size();
        int m = s.size();
        vector<vector<int>> dp(n,vector<int> (m,-1));
        return fun(n-1,m-1,s,p,dp);
    }
};

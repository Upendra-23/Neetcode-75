class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
        unordered_set<string> s(wordList.begin(),wordList.end());
        queue<pair<int,string>> q;
        q.push({1,beginWord});
        s.erase(beginWord);

        while(!q.empty()){
            int steps = q.front().first;
            string word = q.front().second;
            q.pop();

            if(word == endWord) return steps;
            
            for(int i=0;i<word.size();i++){
                char original = word[i];
                for(char ch='a';ch<='z';ch++){
                    word[i] = ch;
                    if(s.find(word) != s.end()){
                        q.push({steps+1,word});
                        s.erase(word);
                    }
                }
                word[i] = original;
            }
        }
        return 0;
    }
};

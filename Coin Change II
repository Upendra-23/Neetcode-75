class Solution {
    int fun(int ind,int target,vector<int> &coins,vector<vector<int>> &dp){
        if(ind == 0){
            if(target % coins[ind] == 0) return 1;
            return 0;
        }
        if(dp[ind][target] != -1) return dp[ind][target];
        int notpick = fun(ind-1,target,coins,dp);
        int pick = 0;
        if(coins[ind] <= target)
            pick = fun(ind,target-coins[ind],coins,dp);
        return dp[ind][target] = pick + notpick;
    }
public:
    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        vector<vector<int>> dp(n,vector<int> (amount+1,-1));
        return fun(n-1,amount,coins,dp);
    }
};

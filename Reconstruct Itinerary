class Solution {
public:
    vector<string> findItinerary(vector<vector<string>>& tickets) {
        int n = tickets.size();
        unordered_map<string,multiset<string>> adj;
        for(auto it:tickets)
            adj[it[0]].insert(it[1]);
        
        vector<string> ans;
        stack<string> s;
        s.push("JFK");
        while(!s.empty()){
            string src = s.top();
            if(adj[src].size() == 0){
                ans.push_back(src);
                s.pop();
            }
            else{
                string dst = *adj[src].begin();
                adj[src].erase(adj[src].begin());
                s.push(dst);
            }
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};

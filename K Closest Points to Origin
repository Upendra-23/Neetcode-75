class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> ans;
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,
        greater<pair<int,pair<int,int>>>> pq;
        for(auto it:points){
            int x = it[0];
            int y = it[1];
            pq.push({x*x+y*y,{x,y}});
        }
        while(!pq.empty() && k--){
            auto it = pq.top();
            pq.pop();
            ans.push_back({it.second.first,it.second.second});
        }
        return ans;
    }
};
